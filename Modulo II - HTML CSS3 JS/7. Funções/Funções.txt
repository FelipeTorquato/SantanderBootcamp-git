1.
    -> Objetivo do curso
        1. Mostrar como declarar funções.
        2. Como manipular parâmtros.
        3. Apresentar loops e outras declarações.
        4. Apresentar o argumento "this".
    -> Estrutura comum de uma função
        Uso da palavra reservada function, seguida pelo nome da função seguida pelo uso ou não de parâmetros dentro de parênteses.
        Variáveis criadas dentro de uma função apenas podem ser utilizadas dentro dela.
        Quando invocamos o "return", a função para de ser executada e retorna o valor que vem depois dele.
    -> Função anônima
        Funções que representam expressões.
        Uma variável pode armazenar uma função.
    -> Função autoinvocável
        IIFE (Immediately Invoked Function Expression)
        Uma função anônima entre parênteses, seguida por outro par de parênteses, que representa sua chamada.
    -> Callbacks
        Uma função passada como argumento para outra.
        Utilizando callbacks, você tem maior controle da ordem de chamadas.

2.
    -> Objetivos
        1. Ensinar como manipular parãmetros de uma função.
        2. Técnicas para lidar com números indefinidos de parãmetros.
    -> Valor padrão
    -> Objeto "arguments"
        Um array com todos os parâmetros passados quando a função foi invocada.
    -> Arrays
        Spread: uma forma de lidar separadamente com elementos.
            O que era parte de um array se torna um elemento independente.
        Rest: combina os argumentos em um array.
            O que era um elemento independente se torna parte de um array.
    -> Objetos
        Destructuring
            Entre chaves {}, podemos filtrar apenas os dados que nos interessam em um objeto.

3.
    -> Objetivos
        1. Ensinar como utilizar algumas das mais famosas declarações do Javascript
    -> If/else
    -> Switch/case
        Equivale a uma comparação de tipo e valor (===)
        Sempre precisa de um valor "default"
        Ideal para quando se precisa comparar muitos valores.
    -> for
        Loop dentro de elementos iteráveis (array, strings).
    -> for...in
        Loop entre propriedades enumeráveis de um objeto.
    -> fro...of
        Loop entre estruturas iteráveis (arrays, strings).
    -> while
        Executa instruções até que a condição se torne falsa.
    -> do...while
        Executa instruções até que a condição se torne falsa.
        Porém a primeira execução sempre ocorre.

4.
    -> Objetivos
        1. Apresentar a palavra "this" e seu uso.
        2. Como aplicar métodos para manipular o seu valor.
    -> This
        A palavra reservada this é uma referência de contexto.
        Seu valor pode mudar de acordo com o lugar no código onde foi chamada.
    -> Call
    -> Apply
    -> Bind
        Clona a estrutura da função onde é chamada e aplica o valor do objeto passado como parâmetro.

5.
    -> Objetivos
        1. Apresentar a sintaxe de arrow functions.
    -> Sintaxe
        Caso exista apenas uma linha, pode dispensar as chaves e o return.
        Caso exista apenas um parâmetro, pode dispensar os parênteses.
        Arrow function não faz hoisting.
    -> Outras restrições
        "this" sempre será o objeto global. Métodos para modificar seu valor não irão funcionar.
        Não existe o objeto "arguments".
        O construtor (ex: new MeuObjeto()) também não pode ser utilizado.