1.
  -> Métodos
    "É uma porção de código (sub-rotina) que é disponibilizada por uma classe.
    Este é executado quando é feita uma requisição a ele. São responsáveis por definir e realizar
    um determinado comportamento."
  -> Padrão de definição
    <?visibilidade?> <?tipo?> <?modificador?> retorno nome (<?parâmetros?>) <?exceções?> corpo
    onde:
    V: "public", "protected" ou "private"
    T: concreto ou abstrato
    M: "static" ou "final"
    R: tipo de dado ou "void"
    N: nome que é fornecido ao método
    P: parâmetros que pode receber
    E: exceções que pode lançar
    C: código que possui ou vazio
  -> Particularidades
    -> Assinatura: é a forma de identificar unicamente o método
      Ass = nome + parâmetros
    -> Construtor e Destrutor: são métodos especiais usados na Orientação a Objetos.
    -> Mensagem: é o ate de solicitar ao método que o mesmo execute. Esta pode ser direcionada a um objeto ou a uma classe.
    -> Passagem de parâmetros:
      Por valor (cópia)
      Por referência (endereço)

2.
  -> Sobrecarga
    "É a capacidade de definir métodos para diferentes contextos, mas preservando seu nome."

3.
  -> Retorno - É uma instrução de interrupção
    Simbologia: return
  -> Funcionamento
    O método executa seu retorno quando:
    Completa todas suas instruções internas
    Chega a uma declaração explícita de retorno
    Lança uma exceção
  -> Considerações
    O tipo de retorno do método é definido na sua criação e pode ser um tipo primitivo ou objeto;
    O tipo de dado do return deve ser compatível com o do método;
    Se o método for sem retorno(void), pode ou não ter um "return" para encerrar sua execução.
